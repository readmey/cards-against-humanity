{"version":3,"sources":["components/Dialog/CustomDialog.tsx","views/StartGame.tsx","App.tsx","reportWebVitals.ts","components/Theme/theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","buttonSpace","marginRight","spacing","dialogTitle","fontWeight","actionsPadding","padding","CustomDialog","open","title","btnText","handleClose","handleSubmit","children","classes","Dialog","onClose","maxWidth","fullWidth","DialogTitle","className","DialogContent","DialogActions","Button","color","variant","size","onClick","animatedButton","animation","boxShadow","transform","animatedTitle","textAlign","marginTop","fontSize","transformOrigin","textShadow","textField","marginBottom","icon","marginLeft","StartGame","useState","createGame","joinGame","dialog","setDialog","Box","display","justifyContent","alignItems","p","TextField","placeholder","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","typography","fontFamily","Theme","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8c0df0f.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, makeStyles } from '@material-ui/core';\n\ninterface DialogProps {\n  open: boolean;\n  handleClose: () => void;\n  handleSubmit: () => void;\n  title: string;\n  btnText: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  buttonSpace: {\n    marginRight: theme.spacing(2),\n  },\n  dialogTitle: {\n    fontWeight: 600,\n  },\n  actionsPadding: {\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CustomDialog: FC<DialogProps> = ({ open, title, btnText, handleClose, handleSubmit, children }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby='simple-dialog-title' open={open} maxWidth='sm' fullWidth>\n      <DialogTitle className={classes.dialogTitle}>{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions className={classes.actionsPadding}>\n        <Button className={classes.buttonSpace} color='primary' variant='text' size='small' onClick={(): void => handleClose()}>\n          Cancel\n        </Button>\n        <Button\n          color='primary'\n          variant='contained'\n          size='small'\n          onClick={(): void => {\n            handleSubmit();\n          }}\n        >\n          {btnText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CustomDialog;\n","import React, { useState, FC } from 'react';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CustomDialog from '../components/Dialog/CustomDialog';\nimport LinkIcon from '@material-ui/icons/Link';\n\nconst useStyles = makeStyles({\n  animatedButton: {\n    animation: '$shadow-pop-tr 0.5s cubic-bezier(0.470, 0.000, 0.745, 0.715) both',\n  },\n  '@keyframes shadow-pop-tr': {\n    '0%': {\n      boxShadow: '0 0 #ffb8d2, 0 0 #ffb8d2, 0 0 #ffb8d2, 0 0 #ffb8d2, 0 0 #ffb8d2, 0 0 #ffb8d2, 0 0 #ffb8d2, 0 0 #ffb8d2',\n      transform: 'translateX(0) translateY(0)',\n    },\n    '100%': {\n      boxShadow:\n        '1px -1px #ffb8d2, 2px -2px #ffb8d2, 3px -3px #ffb8d2, 4px -4px #ffb8d2, 5px -5px #ffb8d2, 6px -6px #ffb8d2, 7px -7px #ffb8d2, 8px -8px #ffb8d2',\n      transform: 'translateX(-8px) translateY(8px)',\n    },\n  },\n  animatedTitle: {\n    animation: '$text-pop-up-top 0.8s cubic-bezier(0.250, 0.460, 0.450, 0.940) both',\n    color: 'white',\n    textAlign: 'center',\n    marginTop: '5rem',\n    fontSize: 80,\n  },\n  '@keyframes text-pop-up-top': {\n    '0%': {\n      transform: 'translateY(0)',\n      transformOrigin: '50% 50%',\n      textShadow: 'none',\n    },\n    '100%': {\n      transform: 'translateY(-50px)',\n      transformOrigin: '50% 50%',\n      textShadow:\n        '0 1px 0 #cccccc, 0 2px 0 #cccccc, 0 3px 0 #cccccc, 0 4px 0 #cccccc, 0 5px 0 #cccccc, 0 6px 0 #cccccc, 0 7px 0 #cccccc, 0 8px 0 #cccccc, 0 9px 0 #cccccc, 0 30px 40px rgba(0, 0, 0, 0.3)',\n    },\n  },\n  textField: {\n    marginBottom: '1rem',\n  },\n  icon: {\n    marginLeft: '0.5rem',\n  },\n});\n\nconst StartGame: FC = () => {\n  const [dialog, setDialog] = useState({\n    createGame: false,\n    joinGame: false,\n  });\n  const classes = useStyles();\n  return (\n    <>\n      <h1 className={classes.animatedTitle}>Cards Against humanity</h1>\n      <Box display='flex' justifyContent='space-around'>\n        <Button\n          className={classes.animatedButton}\n          variant='contained'\n          size='large'\n          color='secondary'\n          onClick={() => setDialog({ ...dialog, createGame: true })}\n        >\n          create new game\n        </Button>\n        <Button className={classes.animatedButton} variant='contained' size='large' color='secondary'>\n          join existing game\n        </Button>\n        <CustomDialog\n          handleClose={() => setDialog({ ...dialog, createGame: false })}\n          handleSubmit={() => ({})}\n          title='Create new game'\n          open={dialog.createGame}\n          btnText='Create Game'\n        >\n          <Box display='flex' alignItems='center' justifyContent='flex-end' p={1}>\n            share game <LinkIcon className={classes.icon} />\n          </Box>\n          <TextField className={classes.textField} placeholder='player name' variant='filled' size='small' fullWidth />\n          <TextField placeholder='group name' variant='filled' size='small' fullWidth />\n        </CustomDialog>\n      </Box>\n    </>\n  );\n};\n\nexport default StartGame;\n","import React from 'react';\nimport '@fontsource/roboto';\nimport StartGame from './views/StartGame';\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App(): JSX.Element {\n  return (\n    <div className='App'>\n      <Switch>\n        <Route path='/' exact component={StartGame} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { FC } from 'react';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Roboto',\n    fontSize: 18,\n  },\n});\n\nconst Theme: FC = ({ children }): JSX.Element => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default Theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Theme from './components/Theme/theme';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Theme>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Theme>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}